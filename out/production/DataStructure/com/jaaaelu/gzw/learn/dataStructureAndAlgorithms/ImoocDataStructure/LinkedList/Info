链表
1.真正的动态数据结构，之前的动态数组只是创建了新的数组修改了引用，不过链表也是最简单的动态数据结构，并且可以让我更深入理解引用以及递归，链
表也可以像数组一样，辅助组成其他数据结构
2.数据存储在"节点"（Node）中
 - 优：真正的动态，不需要处理固定容量的问题
 - 缺：丧失了随机访问的能力，也就是不能像数组那样给一个索引就可以快速进行访问
3.数组和链表的对比：
 - 数组最好用于索引有语意的情况，如 scores[2]，这个也就是获取第二个人的成绩，数组最大优点是：支持快速查询，因为数组开辟的空间在内存中是
 连续分布的，可以直接寻找索引的对应的偏移，然后直接计算进行访问
 - 链表不适合用于索引有语意的情况，最大的优点是：动态

分析链表操作的时间复杂度
1.添加操作 (综合来看是 O(n))
 - addLast(value) O(n)
 - addFirst(value) O(1)
 - add(index, e) O(n/2) = O(n)
2.删除操作（综合来看是 O(n)）
 - removeLast() O(n)
 - removeFirst() O(1)
 - remove(index, e) O(n/2) = O(n)
3.修改操作
 - set(index, value) O(n)
4.查询操作
 - get(index) O(n)
 - contains(value) O(n)

如果只对链表头进行操作的话，时间复杂度均为 O(1)